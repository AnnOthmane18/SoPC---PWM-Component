--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=7 LPM_WIDTH=3 data enable eq
--VERSION_BEGIN 8.0 cbx_cycloneii 2008:02:23:252825 cbx_lpm_add_sub 2008:03:09:257947 cbx_lpm_compare 2008:02:23:252825 cbx_lpm_decode 2008:02:23:252825 cbx_mgl 2008:04:11:273944 cbx_stratix 2008:02:23:252825 cbx_stratixii 2008:02:23:252825  VERSION_END


-- Copyright (C) 1991-2008 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 8 
SUBDESIGN decode_8oa
( 
	data[2..0]	:	input;
	enable	:	input;
	eq[6..0]	:	output;
) 
VARIABLE 
	data_wire[2..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[6..0]	: WIRE;
	eq_wire[7..0]	: WIRE;
	w_anode1862w[3..0]	: WIRE;
	w_anode1879w[3..0]	: WIRE;
	w_anode1889w[3..0]	: WIRE;
	w_anode1899w[3..0]	: WIRE;
	w_anode1909w[3..0]	: WIRE;
	w_anode1919w[3..0]	: WIRE;
	w_anode1929w[3..0]	: WIRE;
	w_anode1939w[3..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[6..0] = eq_wire[6..0];
	eq_wire[] = ( w_anode1939w[3..3], w_anode1929w[3..3], w_anode1919w[3..3], w_anode1909w[3..3], w_anode1899w[3..3], w_anode1889w[3..3], w_anode1879w[3..3], w_anode1862w[3..3]);
	w_anode1862w[] = ( (w_anode1862w[2..2] & (! data_wire[2..2])), (w_anode1862w[1..1] & (! data_wire[1..1])), (w_anode1862w[0..0] & (! data_wire[0..0])), enable_wire);
	w_anode1879w[] = ( (w_anode1879w[2..2] & (! data_wire[2..2])), (w_anode1879w[1..1] & (! data_wire[1..1])), (w_anode1879w[0..0] & data_wire[0..0]), enable_wire);
	w_anode1889w[] = ( (w_anode1889w[2..2] & (! data_wire[2..2])), (w_anode1889w[1..1] & data_wire[1..1]), (w_anode1889w[0..0] & (! data_wire[0..0])), enable_wire);
	w_anode1899w[] = ( (w_anode1899w[2..2] & (! data_wire[2..2])), (w_anode1899w[1..1] & data_wire[1..1]), (w_anode1899w[0..0] & data_wire[0..0]), enable_wire);
	w_anode1909w[] = ( (w_anode1909w[2..2] & data_wire[2..2]), (w_anode1909w[1..1] & (! data_wire[1..1])), (w_anode1909w[0..0] & (! data_wire[0..0])), enable_wire);
	w_anode1919w[] = ( (w_anode1919w[2..2] & data_wire[2..2]), (w_anode1919w[1..1] & (! data_wire[1..1])), (w_anode1919w[0..0] & data_wire[0..0]), enable_wire);
	w_anode1929w[] = ( (w_anode1929w[2..2] & data_wire[2..2]), (w_anode1929w[1..1] & data_wire[1..1]), (w_anode1929w[0..0] & (! data_wire[0..0])), enable_wire);
	w_anode1939w[] = ( (w_anode1939w[2..2] & data_wire[2..2]), (w_anode1939w[1..1] & data_wire[1..1]), (w_anode1939w[0..0] & data_wire[0..0]), enable_wire);
END;
--VALID FILE
